class DataValidator(val set:List<BaseApp>, private val learner: DataLearner.MalwareLearner) {
    fun validate () {
        return if (learner is DataLearner.MalwareLearner) validateApp() else return
    }

    fun validateApp(){
        var errors = 0
        var tp : Float = 0f
        var tn : Float = 0f
        var fp : Float= 0f
        var fn  : Float= 0f
        for (element in set) {
            val result = learner.classify(element)
            if (result && element.isMalware) tp++
            else if (!result && element.isMalware) fn++
            else if (result && !element.isMalware) fp++
            else if (!result && !element.isMalware) tn++
        }
        println("tp ${tp}")
        println("tn ${tn}")
        println("fp ${fp}")
        println("fn ${fn}")
        println("Precision ${(tp /(tp+fp))}")
        println("Recall ${(tp/(tp+fn))}")
        println("False positive rate ${(fp/(fp+tn))}")
        println("Accuracy ${((tp+tn)/(fp+tn+fn+fp))}")
    }

}